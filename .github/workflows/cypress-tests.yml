name: Cypress E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome, edge, firefox]
        
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          browser: ${{ matrix.browser }}
          config-file: cypress.config.js
          spec: cypress/e2e/**/*.cy.js
        env:
          CYPRESS_BASE_URL: ${{ secrets.CYPRESS_BASE_URL }}
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASSWORD: ${{ secrets.CYPRESS_TEST_USER_PASSWORD }}

      # Step 5: Upload test results
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.browser }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-${{ matrix.browser }}
          path: cypress/videos

      # Step 6: Generate and upload reports
      - name: Generate Mochawesome Report
        if: always()
        run: |
          npx mochawesome-merge cypress/results/*.json > cypress/results/combined.json
          npx marge cypress/results/combined.json -f report -o cypress/results

      - name: Upload test report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-report-${{ matrix.browser }}
          path: cypress/results/report.html

      # Step 7: Publish test results
      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Cypress Tests - ${{ matrix.browser }}
          path: cypress/results/*.xml
          reporter: java-junit