{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-20T15:28:51.837Z",
    "end": "2025-07-20T15:29:02.863Z",
    "duration": 11026,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e58c0259-cb66-45be-a33b-6c6432c9ac6f",
      "title": "",
      "fullFile": "cypress\\e2e\\full-integration.cy.js",
      "file": "cypress\\e2e\\full-integration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7141fd6c-4e89-4968-acf9-504287444833",
          "title": "Full Integration Test Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should complete full user workflow",
              "fullTitle": "Full Integration Test Suite should complete full user workflow",
              "timedOut": null,
              "duration": 5594,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to login\ncy.contains('a', 'Get Started').click();\n// Login using the specific form IDs we discovered\ncy.get('#loginEmail').type(credentials.email);\ncy.get('#loginPassword').type(credentials.password);\ncy.get('button[type=\"submit\"]').contains('Login').click();\n// Wait for redirect\ncy.wait(2000);\n// Verify dashboard loads (adjust based on actual dashboard URL)\ncy.url().should('not.include', '/login.html');\n// NOTE: The following sections need to be adjusted based on your actual app\n// These are examples - replace with real selectors from your dashboard\n// Example: Navigate to appointments or sessions\n// cy.contains('New Appointment').click()\n// Example: Create a new therapy note\n// cy.get('button').contains('New Note').click()\n// cy.get('#note-content').type('Integration test note')\n// cy.get('button').contains('Save Note').click()\n// Example: Verify the note was saved\n// cy.contains('Note saved successfully').should('be.visible')\n// Log current URL to see where we are\ncy.url().then(url => {\n  cy.log('Current dashboard URL:', url);\n});",
              "err": {},
              "uuid": "632f5cd0-70ea-4aba-bc3b-45f79916732c",
              "parentUUID": "7141fd6c-4e89-4968-acf9-504287444833",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should test API endpoints if available",
              "fullTitle": "Full Integration Test Suite should test API endpoints if available",
              "timedOut": null,
              "duration": 5353,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// First login\ncy.visit('https://therapy-companion.onrender.com/login.html');\ncy.get('#loginEmail').type(credentials.email);\ncy.get('#loginPassword').type(credentials.password);\ncy.get('button[type=\"submit\"]').contains('Login').click();\ncy.wait(2000);\n// Example API test - adjust endpoint based on your actual API\n// cy.request('GET', 'https://therapy-companion.onrender.com/api/user/profile')\n//   .then((response) => {\n//     expect(response.status).to.eq(200)\n//   })",
              "err": {},
              "uuid": "00623c24-a0e1-407c-a639-7f4e3708fe42",
              "parentUUID": "7141fd6c-4e89-4968-acf9-504287444833",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "632f5cd0-70ea-4aba-bc3b-45f79916732c",
            "00623c24-a0e1-407c-a639-7f4e3708fe42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10947,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}